<SmartFieldSpec
	xmlns="bb_appfx_smartfield"
	xmlns:common="bb_appfx_commontypes"
	ID="5411655b-5cec-4aa5-84bc-868c0651f429"
	Name="Child Waiting List Reason Smart Field"
	Description="Used to display the first waiting list reason on a child"
	Author="Cary Mayeda"
	SPName="USR_USP_SMARTFIELD_SPONSORSHIPOPPOTUNITYCHILDWAITINGLISTREASON"
	DataType="String"
	RecordType="Sponsorship opportunity child"
	DisplayName="Waiting list reason"
	SmartFieldFolder="Sponsorship opportunity child" >

	<!-- describe the SP used to calculate the smart field values -->
	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_SMARTFIELD_SPONSORSHIPOPPOTUNITYCHILDWAITINGLISTREASON( 
	@ASOF datetime
) as begin 

	--select * from SPONSORSHIPOPPORTUNITYCHILD where ID = '631C958A-8431-4083-B87C-8D4F0699122F'

	--select * from SPONSORSHIPOPPORTUNITYAUDIT order by auditkey
	--select auditkey, count(*) from SPONSORSHIPOPPORTUNITYAUDIT group by auditkey order by count(*)
	declare @waitingListProjectQuotaDesc as nvarchar(100)
	declare @waitingListProjectNoChildrenDesc as nvarchar(100)
	declare @waitingListProjectStatusDesc as nvarchar(100)
	declare @waitingListProjectPerformanceDesc as nvarchar(100)

	set @waitingListProjectQuotaDesc = 'Waiting List - maximum quota reached'
	set @waitingListProjectNoChildrenDesc = 'Waiting List - not accepting new children'
	set @waitingListProjectStatusDesc = 'Waiting List - project status'
	set @waitingListProjectPerformanceDesc = 'Waiting List - project performance'

	declare @waitingListProjectQuotaID as uniqueidentifier = null
	declare @waitingListProjectNoChildrenID as uniqueidentifier  = null
	declare @waitingListProjectStatusID as uniqueidentifier = null
	declare @waitingListProjectPerformanceID as uniqueidentifier = null

	declare @errorMessage nvarchar(max)

	begin try

		select @waitingListProjectQuotaID = ID from SPONSORSHIPREASON where lower (REASON) = @waitingListProjectQuotaDesc
		if @waitingListProjectQuotaID is null
		begin
			set @errorMessage = 'Couldn''t find the "'+ @waitingListProjectQuotaDesc + '" Sponsorship Reason'
			raiserror 100000 @errorMessage
		end

		select @waitingListProjectNoChildrenID = ID from SPONSORSHIPREASON where lower (REASON) = @waitingListProjectNoChildrenDesc
		if @waitingListProjectQuotaID is null
		begin
			set @errorMessage = 'Couldn''t find the "'+ @waitingListProjectNoChildrenDesc + '" Sponsorship Reason'
			raiserror 100000 @errorMessage
		end

		select @waitingListProjectStatusID = ID from SPONSORSHIPREASON where lower (REASON) = @waitingListProjectStatusDesc
		if @waitingListProjectStatusID is null
		begin
			set @errorMessage = 'Couldn''t find the "'+ @waitingListProjectStatusDesc + '" Sponsorship Reason'
			raiserror 100000 @errorMessage
		end

		select @waitingListProjectPerformanceID = ID from SPONSORSHIPREASON where lower (REASON) = @waitingListProjectPerformanceDesc
		if @waitingListProjectPerformanceID is null
		begin
			set @errorMessage = 'Couldn''t find the "'+ @waitingListProjectPerformanceDesc + '" Sponsorship Reason'
			raiserror 100000 @errorMessage
		end
	end try
	begin catch
		 exec dbo.USP_RAISE_ERROR
		return 1	
	end catch;
	

	with uniqueAuditKeys as
	(
	select	distinct 
			AUDITKEY, 
			AUDITRECORDID 
	 from	dbo.SPONSORSHIPOPPORTUNITYAUDIT 
	),

	sponsorshipReasonAuditRows as
	(
	select	distinct 
			so_child.ID as CHILDID, 
			afterupdate.AUDITDATE, 
			beforeupdate.SPONSORSHIPREASONID as BEFOREREASONID,
			afterupdate.SPONSORSHIPREASONID as AFTERREASONID
	  from	uniqueAuditKeys u
	  join	dbo.SPONSORSHIPOPPORTUNITYAUDIT afterupdate on
				u.AUDITKEY = afterupdate.AUDITKEY and 
				u.AUDITRECORDID = afterupdate.AUDITRECORDID and
				afterupdate.AUDITTYPE='AFTER UPDATE' 
			
	  join	dbo.SPONSORSHIPOPPORTUNITYAUDIT beforeupdate on
				u.AUDITKEY = beforeupdate.AUDITKEY and 
				u.AUDITRECORDID = beforeupdate.AUDITRECORDID and
				beforeupdate.AUDITTYPE = 'BEFORE UPDATE'
	
	  join	dbo.SPONSORSHIPOPPORTUNITYCHILD so_child on -- This is to only return current children
				u.AUDITRECORDID = so_child.id
		
	 where	afterupdate.SPONSORSHIPREASONID is null and beforeupdate.SPONSORSHIPREASONID is not null
		or	afterupdate.SPONSORSHIPREASONID is not null and beforeupdate.SPONSORSHIPREASONID is null
		or	afterupdate.SPONSORSHIPREASONID <> beforeupdate.SPONSORSHIPREASONID 
  
	 ),
 
	 -- After this is specific to getting the first waiting list reason
	 waitingListAfterUpdate as
	 (
	 select	CHILDID, AUDITDATE, BEFOREREASONID, AFTERREASONID, ROW_NUMBER() OVER (partition by CHILDID order by AUDITDATE) as ROWNUMBER
	   from  sponsorshipReasonAuditRows 
	  where AFTERREASONID in (@waitingListProjectQuotaID,
							  @waitingListProjectNoChildrenID,
							  @waitingListProjectStatusID, 
							  @waitingListProjectPerformanceID)

	 )

	 select CHILDID, sra.REASON  
	   from waitingListAfterUpdate wl
	   join dbo.SPONSORSHIPREASON sra on
			  wl.AFTERREASONID = sra.ID
	  where ROWNUMBER = 1
end
		]]>
	</CreateProcedureSQL>

	<!-- describe any parameters (other than the ASOF date) defined on the SP -->

</SmartFieldSpec>