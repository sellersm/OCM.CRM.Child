<SQLFunctionSpec
	xmlns="bb_appfx_sqlfunction"
	xmlns:common="bb_appfx_commontypes" 
	ID="62d1b050-27ca-4481-8cb5-23af239ac184"
	Name="USR_UFN_CHILDPROJECT_CHILDRENAWAITINGREGISTRATION"
	Description="Get a table of children awaiting registration - both Waiting List and Batch Commit"
	Author="Cary Mayeda"
	DBFunctionName="USR_UFN_CHILDPROJECT_CHILDRENAWAITINGREGISTRATION"
	>
<!-- 
Remarks:    This will return 0 rows if either the Waiting List or Batch Commit sponsorship reason ids are not found.
			The table is sorted so that waiting list children are first and then batch commit kids, sorted by DATEADDED

History:
Date            Modified By     Comments
02-May-2012		CMayeda			Initial Version
-->

	<CreateFunctionSQL>
		<![CDATA[
create function dbo.USR_UFN_CHILDPROJECT_CHILDRENAWAITINGREGISTRATION(@CHILDPROJECTID uniqueidentifier)
returns @awaitingKids table
		(
		 SPONSORSHIPOPPORTUNITYCHILDID uniqueidentifier,
		 DATEADDED datetime,
		 INELIGIBLEREASON nvarchar(20)
		)
with execute as caller
as begin
	declare @waitingListReasonID uniqueidentifier;
	select @waitingListReasonID = ID from SPONSORSHIPREASON where lower (REASON) = 'waiting list';
	
	declare @batchCommitReasonID uniqueidentifier;
	select @batchCommitReasonID = ID from SPONSORSHIPREASON where lower (REASON) = 'batch commit';
	
	-- Only return kids if you got both reason ids
	if @waitingListReasonID is not null and @batchCommitReasonID is not null
		insert	@awaitingKids
		select  so.ID,
				so.DATEADDED,
				case 
					when so.sponsorshipreasonid = @waitingListReasonID then '0 - Waiting List'
					else '1 - Batch Commit'
				end as INELIGIBLEREASON
		  from sponsorshipopportunity so
	      join dbo.sponsorshipreason sr on
					so.sponsorshipreasonid = sr.id
		  join dbo.SPONSORSHIPLOCATION sl on
					so.SPONSORSHIPLOCATIONID = sl.ID 					
		 where (so.sponsorshipreasonid = @waitingListReasonID
		    or so.sponsorshipreasonid = @batchCommitReasonID)
		   and sl.FIELDOFFICEID = @CHILDPROJECTID	
		 order by INELIGIBLEREASON, so.DATEADDED; 
	return
	
end
		]]>
	</CreateFunctionSQL>

</SQLFunctionSpec>
