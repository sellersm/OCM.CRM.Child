<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="f268f6ac-6069-48a6-997e-0780af7d5313"
	Name="USR_USP_CHILDQUOTA_PROCESSCHILDREN"
	Description="REPLACE_WITH_DESCRIPTION"
	Author="Cary Mayeda"
	SPName="USR_USP_CHILDQUOTA_PROCESS_CHILD"
	>
	
	<!-- 
	Remarks:    

	History:
	Date            Modified By     Comments
	02-Jul-2012		CMayeda			Initial Version
	-->

	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_CHILDQUOTA_PROCESS_CHILD(
	@sponsorshipOpportunityChildID uniqueidentifier
	@changeAgentID uniqueidentifier		-- Used to specify change agent for ChangedByID and AddedByID fields
)

as
begin
	-- Get ChangeAgent if none was passed into the sproc
  	if @changeAgentID is null  
	    exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @changeAgentID output

	declare @changeAgentUserName nvarchar(128)
	select @changeAgentUserName = USERNAME from dbo.CHANGEAGENT where ID = @changeAgentID

	
	declare @currentDateTime datetime							-- Used to store the current Date / Time
	set @currentDateTime  = getdate()


	-- ** Had to use temp tables instead of just referencing the table vars because of permission issues when called from the business process
	-- ** The EXECUTE permission was denied on the object 'USR_UDT_CHILDIDLIST'

	declare @lockMaxAttempts tinyint = 5						-- How many times to retry attempting acquiring a lock
	declare @lockDelayString char(8) = '00:00:02'				-- How long to wait in between lock attempts.  Delay uses a string formatted as time - hh:mm:ss
	

	declare @childProjectID uniqueidentifier					-- Used to store the child project being processed 

		-- Used to store the children on the waiting list
	declare @WaitingListChildren USR_UDT_WAITINGLISTCHILDREN
	insert @WaitingListChildren  
	select  sl.FIELDOFFICEID,
			so.ID,
			so.DATEADDED
		from dbo.SPONSORSHIPOPPORTUNITY so
		join dbo.USR_CHILDEXTENSION ce on
				so.ID = ce.SPONSORSHIPOPPORTUNITYCHILDID
	    join dbo.SPONSORSHIPREASON sr on
				so.SPONSORSHIPREASONID = sr.id
		join dbo.SPONSORSHIPLOCATION sl on
				so.SPONSORSHIPLOCATIONID = sl.ID 	
					
		where so.ID = @sponsorshipOpportunityChildID
		and ce.REGISTRATIONDATE is null
	
	-- ** verify that there is only one row
 		declare @lockFailed table (quotaType tinyint,  -- 0 = project, 1 = country
					   objectID uniqueidentifier)

	declare @lockObjectID uniqueidentifier
	declare @objectLocked bit

	select @childProjectID = childProjectID 
	 from @WaitingListChildren
	
	

-- ** get quota type
		
		-- Try to lock the current child project
		if 0=0 -- ** child project
			set @lockObjectID = @childProjectID
		else
			set @lockObjectID = @childProjectID  -- ** CHANGE TO COUNTRYID
		
		set @objectLocked = 0
		declare @lockAttempts int = 0
		while @lockAttempts < @lockMaxAttempts and @objectLocked = 0
		begin
			set @lockAttempts = @lockAttempts + 1
			set @objectLocked = 1
			begin try
				exec dbo.USR_USP_BATCHLOCKINSERT @lockObjectID, @currentDateTime, @changeAgentUserName
			end try
			begin catch
				set @objectLocked = 0
				if @lockAttempts < @lockMaxAttempts
					waitfor delay @lockDelayString
			end catch	
		end 
	
		if @objectLocked = 0
		begin
			-- Child Project could not be locked, so we need to log this in the output parm @lockFailed and the business process exception table
			if 0=0 -- **child project
			begin
				--** Lock failed			
			end
			else
			begin
				--** Lock failed			
			end
		end 
		else
		begin
			if 0=0 -- **child project
				exec dbo.USR_USP_CHILDQUOTA_PROCESS_PROJECT @childProjectID, @WaitingListChildren, @changeAgentID, @insertSuccessSQL, @insertSuccessSQLParms, @insertExceptionsSQL, @insertExceptionsSQLParm

			else
				exec dbo.USR_USP_CHILDQUOTA_PROCESS_PROJECT @childProjectID, @WaitingListChildren, @changeAgentID, @insertSuccessSQL, @insertSuccessSQLParms, @insertExceptionsSQL, @insertExceptionsSQLParm  -- ** FIX FOR COUNTRY

			-- Unlock project / country
			exec dbo.USR_USP_DELETEBATCHLOCK @lockObjectID, @changeAgentUserName
			
		end
		

	return 0

end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>

