<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="46c6ff36-20ca-4512-b495-8b7b9311b5bc"
	Name="USR_USP_CHILDREN_SETELIGIBLEORPENDING"
	Description="Set children to pending or eligible based on if there are any pending reasons"
	Author="Cary Mayeda"
	SPName="USR_USP_CHILDREN_SETELIGIBLEORPENDING">
	
	<!-- 
	Remarks:    Sets the child's eligibility to either Eligible or Pending based on if the child has pending reasons for the children passed in @childIDList
				
	History:
	Date            Modified By     Comments
	19-Jun-2012		CMayeda			Initial Version
	09-Jul-2012		CMayeda			Added @doNotUpdateIneligible parm to consolidate sprocs performing this function			
	-->

	<common:DependencyList>
		<common:Dependency CatalogAssembly="MoM.Sponsorship.Child.Catalog.dll"  CatalogItem="USR_UDT_CHILDIDLIST"/>
		<common:Dependency CatalogAssembly="" CatalogItem="USP_CHANGEAGENT_GETORCREATECHANGEAGENT"/>
		<common:Dependency CatalogAssembly="" CatalogItem="USP_RAISE_ERROR" />
	</common:DependencyList>


	<CreateProcedureSQL>
		<![CDATA[

create procedure dbo.USR_USP_CHILDREN_SETELIGIBLEORPENDING (
	@childIDList USR_UDT_CHILDIDLIST readonly,		-- The children to be made eligible or pending
	@includeIneligibleInUpdate bit = 1,				-- Whether to include Ineligible children in updates.  0 = Do not include Ineligible children, 1 = Include Ineligible children
	@changeAgentID uniqueidentifier,				-- Used to specify change agent for CHANGEDBYID fields
	@changedToEligible int = 0 output,				-- Output parm that specifies how many children were set to Eligible
	@changedToPending int = 0 output)				-- Output parm that specifies how many children were set to Pending

as
begin
	-- Eligibility code value constants
	declare @eligibilityCode_Pending tinyint = 0
	declare @eligibilityCode_Eligible tinyint = 1
	declare @eligibilityCode_Ineligible tinyint = 2
	
	-- Reason Type code constant
	declare @reasonTypeCode_MarkPending tinyint = 0
	
	-- Get ChangeAgent if none was passed into the sproc
  	if @CHANGEAGENTID is null  
	    exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output

    -- Used for setting date fields to today's date
	declare @CurrentDate datetime = null  
	set @CurrentDate = getdate()	
	
	
	-- Two variable are used for each update.  This is better performing and easier to maintain than the other dynamic options (dynamic sql, temp table, table variable)
	
	-- These are the kids that can be updated to Pending
	-- Both variables are set to Eligible unless Ineligibles should be included 
	declare @eligibilityCodeToIncludeForPending1 as int = @eligibilityCode_Eligible
	declare @eligibilityCodeToIncludeForPending2 as int = @eligibilityCode_Eligible
	if @includeIneligibleInUpdate = 1
		set @eligibilityCodeToIncludeForPending2 = @eligibilityCode_Ineligible
	
	-- These are the kids that can be updated to Eligible
	-- Both variables are set to Pending unless Ineligibles should be included 
	declare @eligibilityCodeToIncludeForEligible1 as int = @eligibilityCode_Pending
	declare @eligibilityCodeToIncludeForEligible2 as int = @eligibilityCode_Pending
	if @includeIneligibleInUpdate = 1
		set @eligibilityCodeToIncludeForEligible2 = @eligibilityCode_Ineligible


	-- This needs to be set to off for the output parms to be set properly
	set nocount off
	
	begin try	
		-- Set Eligibility to Pending if the child is Eligible and has at least one pending reason
		update  so
		   set	ELIGIBILITYCODE = @eligibilityCode_Pending, 
				SPONSORSHIPREASONID = null,
				CHANGEDBYID = @CHANGEAGENTID,
				DATECHANGED = @CURRENTDATE
		  from  dbo.SPONSORSHIPOPPORTUNITY so
         where	exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so.ID)

				-- Child has at least one pending reason
		   and	exists (select sreason.ID			
						  from dbo.SPONSORSHIPOPPORTUNITYREASON so_reason
					inner join dbo.SPONSORSHIPREASON sreason on sreason.ID = so_reason.SPONSORSHIPREASONID
						 where so_reason.SPONSORSHIPOPPORTUNITYID = so.ID
						   and sreason.REASONTYPECODE = @reasonTypeCode_MarkPending)	 -- REASONTYPECODE = "Child - Mark pending eligibility"
				-- Only update those that are not already Pending. Depending on @includeIneligibleInUpdate, include or exclude Ineligible kids
		   and	exists (select ID from dbo.SPONSORSHIPOPPORTUNITY where ID=so.ID and ELIGIBILITYCODE in (@eligibilityCodeToIncludeForPending1, @eligibilityCodeToIncludeForPending2))
		   
		set @changedToPending = @@ROWCOUNT
		
		-- Set Eligibility to Eligible if the child is Pending and has at no pending reasons
		update  so
		   set	ELIGIBILITYCODE = @eligibilityCode_Eligible,   
				SPONSORSHIPREASONID = null,
				CHANGEDBYID = @CHANGEAGENTID,
				DATECHANGED = @CURRENTDATE
		  from  dbo.SPONSORSHIPOPPORTUNITY so
         where	exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so.ID)
			
				-- Child has no pending reasons 
		   and  not exists (select sreason.ID			
							  from dbo.SPONSORSHIPOPPORTUNITYREASON so_reason
						inner join dbo.SPONSORSHIPREASON sreason on sreason.ID = so_reason.SPONSORSHIPREASONID
							 where so_reason.SPONSORSHIPOPPORTUNITYID = so.ID
							   and sreason.REASONTYPECODE = @reasonTypeCode_MarkPending)	 -- REASONTYPECODE = "Child - Mark pending eligibility"
				-- Only update those that are not already Eligible. Depending on @includeIneligibleInUpdate, include or exclude Ineligible kids
		   and exists (select ID from dbo.SPONSORSHIPOPPORTUNITY where ID=so.ID and ELIGIBILITYCODE in (@eligibilityCodeToIncludeForEligible1, @eligibilityCodeToIncludeForEligible2))

			set @CHANGEDTOELIGIBLE = @@ROWCOUNT
	end try
	begin catch
		exec dbo.USP_RAISE_ERROR
		return 1	
	end catch
	
	return 0
end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
