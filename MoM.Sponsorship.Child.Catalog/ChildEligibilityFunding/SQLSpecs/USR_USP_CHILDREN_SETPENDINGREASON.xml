<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="187d43c2-9c4f-4428-9f38-e6f66ea63f93"
	Name="USR_USP_CHILDREN_SETPENDINGREASON"
	Description="Add a pending sponsorship reason to a list of children"
	Author="Cary Mayeda"
	SPName="USR_USP_CHILDREN_SETPENDINGREASON"	>

	<!-- 
	Remarks:    It will only add the pending reason if it doesn't already exist on a child
				Either the guid for the sponsorship reason can be passed in @sponsorshipReasonID or the text of the sponsorship reason in @sponsorshipReasonText.
				If both are provided the @sponsorshipReasonID parm is used.

	History:
	Date            Modified By     Comments
	12-Jul-2012		CMayeda			Initial Version
	28-Aug-2015		Memphis			Updated raiserror call: raiserror('Field office for Transfer Location is not configured.',16,1);
-->

	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_CHILDREN_SETPENDINGREASON (	
	@childIDList dbo.USR_UDT_CHILDIDLIST readonly,		-- The children to add a pending reason
	@sponsorshipReasonID uniqueidentifier = null,		-- Used to specify the sponsorship reason to add by sponsorshipreason id guid. If guid is not null, guid is used instead of text
	@sponsorshipReasonText nvarchar(100) = '',			-- Used to specify the sponsorship reason to add by case insensitive string - case is ignored when finding the sponsorship reason 
	@changeAgentID uniqueidentifier = null,				-- Used to specify change agent for ChangedByID and AddedByID fields
	@insertRowcount int = 0 output						-- Output parm that specifies how many pending reasons were added
)
as
begin
	-- Constants
	declare @reasonTypeCode_ChildMarkPendingEligibility tinyint = 0


	-- Get ChangeAgent if none was passed into the sproc
  	if @changeAgentID is null  
	    exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @changeAgentID output

    -- Used for setting date fields to today's date
	declare @currentDate datetime = null  
	set @currentDate = getdate()	
	

	declare @errorMessage nvarchar(max)  -- Used when concatenation is needed in an error message
		
	begin try
	    -- These are required for the sproc to work correctly, so we need to throw an exception if the IDs aren't found
	
		if @sponsorshipReasonID is null
		begin
			-- if no sponsorship reason id was specified, find the pending sponsorship reason id using @sponsorshipReasonText
			
			select	@sponsorshipReasonID = ID 
			  from	dbo.SPONSORSHIPREASON 
			 where	lower (REASON) = lower (@sponsorshipReasonText) 
			   and	REASONTYPECODE = @reasonTypeCode_ChildMarkPendingEligibility
		
			if @sponsorshipReasonID is null
			begin
				set @errorMessage = 'Couldn''t find the "' + @sponsorshipReasonText + '" pending sponsorship reason'
				raiserror(@errorMessage,16,1);
				
			end
		end
		else
			-- Validate the pending sponsorship reason id that was passed in @sponsorshipReasonID 
			if not exists (select ID from dbo.SPONSORSHIPREASON where ID = @sponsorshipReasonID and REASONTYPECODE = @reasonTypeCode_ChildMarkPendingEligibility)
			begin
				set @errorMessage = 'Couldn''t find a valid pending sponsorship reason with id = ' + cast (@sponsorshipReasonID as nvarchar(50)) 
				raiserror(@errorMessage,16,1);
				
			end				
	end try
	begin catch
	    exec dbo.USP_RAISE_ERROR
		return 1	
	end catch
	
	-- This needs to be set to off for the output parms to be set properly
	set nocount off
	
	
	-- Insert the pending sponsorship reason if the child doesn't already have it
	insert dbo.SPONSORSHIPOPPORTUNITYREASON
				(SPONSORSHIPOPPORTUNITYID,
				 SPONSORSHIPREASONID,				
				 ADDEDBYID, 
				 CHANGEDBYID, 
				 DATEADDED, 
				 DATECHANGED)
				 
		select  childlist.SPONSORSHIPOPPORTUNITYCHILDID,
				@sponsorshipReasonID, 
				@changeAgentID, 
				@changeAgentID, 
				@currentDate, 
				@currentDate
				
	      from	@childIDList childlist
		   
		 -- Verify that the children do not already have the sponsorship pending reason
   	     where  not exists (select ID from dbo.SPONSORSHIPOPPORTUNITYREASON  
			                 where SPONSORSHIPREASONID = @sponsorshipReasonID and SPONSORSHIPOPPORTUNITYID = childlist.SPONSORSHIPOPPORTUNITYCHILDID)

		
	set @insertRowcount = @@ROWCOUNT
	
	return 0
end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
