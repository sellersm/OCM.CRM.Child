<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="e13f68a3-23da-41a2-8fe1-9d2bec5e3abb"
	Name="USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_CURRENTPHOTOYEARDOESNOTMATCHHEADSHOT"
	Description="Used to add/delete 'Current photo year does not match headshot attachment' pending reasons."
	Author="Cary Mayeda"
	SPName="USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_CURRENTPHOTOYEARDOESNOTMATCHHEADSHOT"
	>

	<!-- 
	Remarks:	The 'Current photo year does not match headshot attachment' pending reason is added to the child/children if their Current photo year does not match the year 
				title prefix on the current headshot attachment.
	
				This is called from USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITYCHECK, which is used by both the Sponsorship Opportunity Eligibility Check record operation 	
				and with the Sponsorship Opportunity Eligibility Business Process.  As such it needs to be able to handle a single Sponsorship Opportunity Child and
				a Sponsorship Opportunity selection.  
				
				This is accomplished with the @ID and @IDSETREGISTERID parameters.
				If @ID is not null, then the sproc uses @ID to specify the Sponsorship Opportunity ID
				If @ID is null, then the sproc uses @IDSETREGISTERID to specify the collection of children to check.
				
	History:
	Date			Modified By		Comments
	30-Mar-2013		CMayeda			Initial Version for TK-01174
	-->

	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_CURRENTPHOTOYEARDOESNOTMATCHHEADSHOT(
	@childIDList dbo.USR_UDT_CHILDIDLIST readonly,	-- The children to be made eligible or pending
	@changeAgentID uniqueidentifier,				-- Used to specify change agent for CHANGEDBYID and ADDEDBYID fields
	@deletedRows int = 0 output,					-- Output parm that specifies how many pending reasons were deleted
	@insertedRows int = 0 output					-- Output parm that specifies how many pending reasons were inserted
)
as begin

	-- Eligibility code value constants
	declare @eligibilityCode_Pending tinyint = 0
	declare @eligibilityCode_Eligible tinyint = 1
	declare @eligibilityCode_Ineligible tinyint = 2

	-- How newly registered of a child is excluded from this pending reason in months
	-- This is added to alleviate the pressure of updateing the PROFILEPHOTOYEAR from FileNexus.  
	-- The initial default is to allow 2 months before this pending reason will appear.
	declare @registrationDateBuffer int  
	set @registrationDateBuffer = 2

	declare @reasonTypeCode_ChildMarkPendingEligibility tinyint = 0

	declare @sponsorshipReason_CurrentPhotoYearDoesNotMatchHeadshot nvarchar(100) = 'Current photo year does not match headshot attachment'
	declare @errorMessageCurrentPhotoYearDoesNotMatchHeadshotNotfound nvarchar(500) = 'Couldn''t find the "' + @sponsorshipReason_CurrentPhotoYearDoesNotMatchHeadshot + '" Sponsorship Reason'	

	declare @sproppAttachmentType_ChildPhotoHeadshotCurrent nvarchar(100) = 'Child Photo - Headshot - Current'
	declare @errorMessageChildPhotoHeadshotCurrentNotfound nvarchar(500) = 'Couldn''t find the "' + @sproppAttachmentType_ChildPhotoHeadshotCurrent + '" Attachment Type'	
	
	-- Get ChangeAgent if none was passed into the sproc
  	if @CHANGEAGENTID is null  
	    exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output

    -- Used for setting date fields to today's date
	declare @CurrentDate datetime = null  
	set @CurrentDate = getdate()	
	
		
	begin try
	    -- These are required for the sproc to work correctly, so we need to throw an exception if the IDs aren't found	
		declare @CurrentPhotoYearDoesNotMatchHeadshotID uniqueidentifier
		select @CurrentPhotoYearDoesNotMatchHeadshotID = ID from dbo.SPONSORSHIPREASON where lower (REASON) = lower (@sponsorshipReason_CurrentPhotoYearDoesNotMatchHeadshot) and REASONTYPECODE = @reasonTypeCode_ChildMarkPendingEligibility
		if @CurrentPhotoYearDoesNotMatchHeadshotID is null
			RAISERROR 1000000 @errorMessageCurrentPhotoYearDoesNotMatchHeadshotNotfound					
			
		-- get the attachment type code id values we need:
		declare @headshotCurrentAttachmentTypeCodeID uniqueidentifier;
		select @headshotCurrentAttachmentTypeCodeID = ID from dbo.SPROPPATTACHMENTTYPECODE where lower (DESCRIPTION) = lower (@sproppAttachmentType_ChildPhotoHeadshotCurrent)
		if @headshotCurrentAttachmentTypeCodeID is null
			RAISERROR 1000000 @errorMessageChildPhotoHeadshotCurrentNotfound					

		select @headshotCurrentAttachmentTypeCodeID = ID 
		from dbo.SPROPPATTACHMENTTYPECODE 
		where lower (DESCRIPTION) = lower ('Child Photo - Headshot - Current');

	end try
	begin catch
	    exec dbo.USP_RAISE_ERROR
		--return 1	
	end catch
	
	-- This needs to be set to off for the output parms to be set properly
	set nocount off
	
	-- Remove 'Current photo year does not match headshot attachment' pending reasons if Current Year = The "Current Photo" headshot year in the title
	
	delete  dbo.SPONSORSHIPOPPORTUNITYREASON
	  from  dbo.SPONSORSHIPOPPORTUNITYREASON so_reason
			
	 where  -- Find children who are specified to be reviewed and have the 'Profile photo year is blank' pending reason  			
			exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so_reason.SPONSORSHIPOPPORTUNITYID )
	   and	so_reason.SPONSORSHIPREASONID = @CurrentPhotoYearDoesNotMatchHeadshotID

			-- Check if PHOTOYEAR is null or 0 or and a headshot attachment exists that matches the photo year
	   and	exists (select ID 
			  	      from dbo.USR_CHILDEXTENSION ch_ext
				     where ch_ext.SPONSORSHIPOPPORTUNITYCHILDID = so_reason.SPONSORSHIPOPPORTUNITYID
					   and (coalesce (ch_ext.PHOTOYEAR,0) = 0  -- 0 seems to be the default value
							or 
							exists (select ID 
					  			         from dbo.SPONSORSHIPOPPORTUNITYATTACHMENT so_att
					                    where so_att.SPONSORSHIPOPPORTUNITYID = ch_ext.SPONSORSHIPOPPORTUNITYCHILDID
									      and so_att.SPROPPATTACHMENTTYPECODEID = @headshotCurrentAttachmentTypeCodeID
									      and cast (coalesce (ch_ext.PHOTOYEAR,9999) as varchar(4)) = left (so_att.TITLE,4)
								   )
							)		  
					)
	   
					  
	set @DELETEDROWS = @@ROWCOUNT
	
	
	-- Insert 'Current photo year does not match headshot attachment' pending reasons if Current Year <> The "Current Photo" headshot year in the title
	insert dbo.SPONSORSHIPOPPORTUNITYREASON
				(SPONSORSHIPOPPORTUNITYID,
				 SPONSORSHIPREASONID,				
				 ADDEDBYID, 
				 CHANGEDBYID, 
				 DATEADDED, 
				 DATECHANGED)
				 
		select  ID,
				@CurrentPhotoYearDoesNotMatchHeadshotID, 
				@CHANGEAGENTID, 
				@CHANGEAGENTID, 
				@CurrentDate, 
				@CurrentDate
				
		  from	dbo.SPONSORSHIPOPPORTUNITY so
		 
		 where	exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so.ID )	           
	      
				-- Verify that the children do not already have a 'Current photo year does not match headshot attachment' pending reason
   	       and	not exists (select so_reason.SPONSORSHIPOPPORTUNITYID 
							  from dbo.SPONSORSHIPOPPORTUNITYREASON so_reason 
		                     where so_reason.SPONSORSHIPREASONID = @CurrentPhotoYearDoesNotMatchHeadshotID and so_reason.SPONSORSHIPOPPORTUNITYID = so.ID)

				-- Check if PHOTOYEAR is not null or 0 and there are no headshot attachments that match the photo year
		   and	not exists (select ID 
					  	     from dbo.USR_CHILDEXTENSION ch_ext
						    where ch_ext.SPONSORSHIPOPPORTUNITYCHILDID = so.ID
							  and (coalesce (ch_ext.PHOTOYEAR,0) = 0  -- 0 seems to be the default value
									or 
								   exists (select ID 
							  			     from dbo.SPONSORSHIPOPPORTUNITYATTACHMENT so_att
							                where so_att.SPONSORSHIPOPPORTUNITYID = ch_ext.SPONSORSHIPOPPORTUNITYCHILDID
										 	  and so_att.SPROPPATTACHMENTTYPECODEID = @headshotCurrentAttachmentTypeCodeID
									 		  and cast (coalesce (ch_ext.PHOTOYEAR,9999) as varchar(4)) = left (so_att.TITLE,4)
										  )
								  )		
						   )
	
				-- Don't add to ineligible kids that are not quota waiting list
		   and (so.ELIGIBILITYCODE in (@eligibilityCode_Pending, @eligibilityCode_Eligible)
		        or (so.ELIGIBILITYCODE = @eligibilityCode_Ineligible
				    and exists (select sponsorshipReasonID from dbo.USR_UFN_CHILDQUOTA_GETWAITINGLISTREASONS() wl_reasons where so.SPONSORSHIPREASONID = wl_reasons.sponsorshipReasonID)))
						
	
	set @INSERTEDROWS = @@ROWCOUNT

end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
