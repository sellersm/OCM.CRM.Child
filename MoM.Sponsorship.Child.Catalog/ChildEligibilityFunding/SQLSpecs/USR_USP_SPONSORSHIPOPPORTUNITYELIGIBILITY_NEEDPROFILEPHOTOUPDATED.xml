<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="99240c48-deeb-4107-96f0-f6164b09e5b5"
	Name="USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_NEEDPROFILEPHOTOUPDATED"
	Description="Used to add/delete 'Need photo updated' pending reasons."
	Author="Cary Mayeda"
	SPName="USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_NEEDPROFILEPHOTOUPDATED"
	>

	<!-- 
	Remarks:	The 'Need profile photo updated' pending reason is added to the child/children if the FileNexus Profile photo year field is not null and is older than 36 months.
	
				This is called from USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITYCHECK, which is used by both the Sponsorship Opportunity Eligibility Check record operation 	
				and with the Sponsorship Opportunity Eligibility Business Process.  As such it needs to be able to handle a single Sponsorship Opportunity Child and
				a Sponsorship Opportunity selection.  
				
				This is accomplished with the @ID and @IDSETREGISTERID parameters.
				If @ID is not null, then the sproc uses @ID to specify the Sponsorship Opportunity ID
				If @ID is null, then the sproc uses @IDSETREGISTERID to specify the collection of children to check.
				
	History:
	Date			Modified By		Comments
	30-Mar-2013		CMayeda			Initial Version for TK-01174
	-->

	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_NEEDPROFILEPHOTOUPDATED(
	@childIDList dbo.USR_UDT_CHILDIDLIST readonly,	-- The children to be made eligible or pending
	@changeAgentID uniqueidentifier,				-- Used to specify change agent for CHANGEDBYID and ADDEDBYID fields
	@deletedRows int = 0 output,					-- Output parm that specifies how many pending reasons were deleted
	@insertedRows int = 0 output					-- Output parm that specifies how many pending reasons were inserted
)
as begin
	-- Eligibility code value constants
	declare @eligibilityCode_Pending tinyint = 0
	declare @eligibilityCode_Eligible tinyint = 1
	declare @eligibilityCode_Ineligible tinyint = 2

	-- How old a photo can be and still be valid in months
	declare @photoValidAge int  
	set @photoValidAge = 36

	declare @reasonTypeCode_ChildMarkPendingEligibility tinyint = 0

	declare @sponsorshipReason_NeedProfilePhotoUpdated nvarchar(100) = 'Need profile photo updated'
	declare @errorMessageNeedProfilePhotoUpdatedNotfound nvarchar(500) = 'Couldn''t find the "' + @sponsorshipReason_NeedProfilePhotoUpdated + '" Sponsorship Reason'	

	-- Get ChangeAgent if none was passed into the sproc
  	if @CHANGEAGENTID is null  
	    exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output

    -- Used for setting date fields to today's date
	declare @CurrentDate datetime = null  
	set @CurrentDate = getdate()	
	
		
	begin try
	    -- These are required for the sproc to work correctly, so we need to throw an exception if the IDs aren't found	
		declare @NeedProfilePhotoUpdatedID uniqueidentifier
		select @NeedProfilePhotoUpdatedID = ID from dbo.SPONSORSHIPREASON where lower (REASON) = lower (@sponsorshipReason_NeedProfilePhotoUpdated) and REASONTYPECODE = @reasonTypeCode_ChildMarkPendingEligibility
		if @NeedProfilePhotoUpdatedID is null
			RAISERROR 1000000 @errorMessageNeedProfilePhotoUpdatedNotfound					
	end try
	begin catch
	    exec dbo.USP_RAISE_ERROR
		return 1	
	end catch
	
	-- This needs to be set to off for the output parms to be set properly
	set nocount off
	
	-- Remove 'Need profile photo updated' pending reasons if CURRENTPHOTODATE is current 
	
	delete  dbo.SPONSORSHIPOPPORTUNITYREASON
	  from  dbo.SPONSORSHIPOPPORTUNITYREASON so_reason
			
	 where  -- Find children who are specified to be reviewed and have the 'Need profile photo updated' pending reason  			
			exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so_reason.SPONSORSHIPOPPORTUNITYID )
	   and	so_reason.SPONSORSHIPREASONID = @NeedProfilePhotoUpdatedID

		   -- Check if PROFILEPHOTOYEAR is valid (Photo is recent)
	   and exists (	select	ID
					  from	dbo.USR_CHILDEXTENSION 
					 where	SPONSORSHIPOPPORTUNITYCHILDID = so_reason.SPONSORSHIPOPPORTUNITYID 
					   and  ((coalesce (PHOTOYEAR, 0) = 0)
					            or  
							 (coalesce (PROFILEPHOTOYEAR, 0) = 0)
					            or  
							 (coalesce (PROFILEPHOTOYEAR, 0) <> 0 and PROFILEPHOTOYEAR > year (dateadd (mm, (@photoValidAge * -1), getdate())))
							)
			      )
					  
	set @DELETEDROWS = @@ROWCOUNT
	
	
	-- Insert 'Need profile photo updated' pending reason if PROFILEPHOTOYEAR is not null and too old
	insert dbo.SPONSORSHIPOPPORTUNITYREASON
				(SPONSORSHIPOPPORTUNITYID,
				 SPONSORSHIPREASONID,				
				 ADDEDBYID, 
				 CHANGEDBYID, 
				 DATEADDED, 
				 DATECHANGED)
				 
		select  ID,
				@NeedProfilePhotoUpdatedID, 
				@CHANGEAGENTID, 
				@CHANGEAGENTID, 
				@CurrentDate, 
				@CurrentDate
				
		  from	dbo.SPONSORSHIPOPPORTUNITY so
		 
		 where	exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so.ID )	           
	      
				-- Verify that the children do not already have a 'Need profile photo updated' pending reason
   	       and	not exists (select so_reason.SPONSORSHIPOPPORTUNITYID 
							  from dbo.SPONSORSHIPOPPORTUNITYREASON so_reason 
		                     where so_reason.SPONSORSHIPREASONID = @NeedProfilePhotoUpdatedID and so_reason.SPONSORSHIPOPPORTUNITYID = so.ID)

				-- Check if PROFILEPHOTOYEAR is too old 
		   and	not exists (select	ID
							  from	dbo.USR_CHILDEXTENSION 
							 where	SPONSORSHIPOPPORTUNITYCHILDID = so.ID
							   and  ((coalesce (PHOTOYEAR, 0) = 0)
									    or  
									 (coalesce (PROFILEPHOTOYEAR, 0) = 0)
										or  
									 (coalesce (PROFILEPHOTOYEAR, 0) <> 0 and PROFILEPHOTOYEAR > year (dateadd (mm, (@photoValidAge * -1), getdate())))
						            )
					       )
	
				-- Don't add to ineligible kids that are not quota waiting list
		   and (so.ELIGIBILITYCODE in (@eligibilityCode_Pending, @eligibilityCode_Eligible)
		        or (so.ELIGIBILITYCODE = @eligibilityCode_Ineligible
				    and exists (select sponsorshipReasonID from dbo.USR_UFN_CHILDQUOTA_GETWAITINGLISTREASONS() wl_reasons where so.SPONSORSHIPREASONID = wl_reasons.sponsorshipReasonID)))
						
	
	set @INSERTEDROWS = @@ROWCOUNT

end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
