<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="5db5c3f9-01be-44b8-8669-5b9602340b70"
	Name="USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_CHANGECURRENTPHOTOATTACHMENT"
	Description="Used to add/delete 'Change current photo attachment' pending reasons."
	Author="Cary Mayeda"
	SPName="USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_CHANGECURRENTPHOTOATTACHMENT"
	>

	<!-- 
	Remarks:	The 'Change current photo attachment' pending reason is added if the child is unsponsored and the FileNexus Profile photo year field is not null and 
				does not match the current year photo field
	
				This is called from USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITYCHECK, which is used by both the Sponsorship Opportunity Eligibility Check record operation 	
				and with the Sponsorship Opportunity Eligibility Business Process.  As such it needs to be able to handle a single Sponsorship Opportunity Child and
				a Sponsorship Opportunity selection.  
				
				This is accomplished with the @ID and @IDSETREGISTERID parameters.
				If @ID is not null, then the sproc uses @ID to specify the Sponsorship Opportunity ID
				If @ID is null, then the sproc uses @IDSETREGISTERID to specify the collection of children to check.
				
	History:
	Date			Modified By		Comments
	30-Mar-2013		CMayeda			Initial Version for TK-01174
	-->

	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_SPONSORSHIPOPPORTUNITYELIGIBILITY_CHANGECURRENTPHOTOATTACHMENT(
	@childIDList dbo.USR_UDT_CHILDIDLIST readonly,	-- The children to be made eligible or pending
	@changeAgentID uniqueidentifier,				-- Used to specify change agent for CHANGEDBYID and ADDEDBYID fields
	@deletedRows int = 0 output,					-- Output parm that specifies how many pending reasons were deleted
	@insertedRows int = 0 output					-- Output parm that specifies how many pending reasons were inserted
)
as begin
	-- Eligibility code value constants
	declare @eligibilityCode_Pending tinyint = 0
	declare @eligibilityCode_Eligible tinyint = 1
	declare @eligibilityCode_Ineligible tinyint = 2

	declare @reasonTypeCode_ChildMarkPendingEligibility tinyint = 0

	declare @sponsorshipReason_ChangeCurrentPhotoAttachment nvarchar(100) = 'Change current photo attachment'
	declare @errorMessageChangeCurrentPhotoAttachmentNotfound nvarchar(500) = 'Couldn''t find the "' + @sponsorshipReason_ChangeCurrentPhotoAttachment + '" Sponsorship Reason'	

	-- Get ChangeAgent if none was passed into the sproc
  	if @CHANGEAGENTID is null  
	    exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output

    -- Used for setting date fields to today's date
	declare @CurrentDate datetime = null  
	set @CurrentDate = getdate()	
	
		
	begin try
	    -- These are required for the sproc to work correctly, so we need to throw an exception if the IDs aren't found	
		declare @ChangeCurrentPhotoAttachmentID uniqueidentifier
		select @ChangeCurrentPhotoAttachmentID = ID from dbo.SPONSORSHIPREASON where lower (REASON) = lower (@sponsorshipReason_ChangeCurrentPhotoAttachment) and REASONTYPECODE = @reasonTypeCode_ChildMarkPendingEligibility
		if @ChangeCurrentPhotoAttachmentID is null
			RAISERROR 1000000 @errorMessageChangeCurrentPhotoAttachmentNotfound					
	end try
	begin catch
	    exec dbo.USP_RAISE_ERROR
		return 1	
	end catch
	
	-- This needs to be set to off for the output parms to be set properly
	set nocount off
	
	-- Remove 'Change current photo attachment' pending reasons if child is sponsored or the Profile Photo Year = Current Photo Year
	
	delete  dbo.SPONSORSHIPOPPORTUNITYREASON
	  from  dbo.SPONSORSHIPOPPORTUNITYREASON so_reason
			
	 where  -- Find children who are specified to be reviewed and have the 'Change current photo attachment' pending reason  			
			exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so_reason.SPONSORSHIPOPPORTUNITYID )
	   and	so_reason.SPONSORSHIPREASONID = @ChangeCurrentPhotoAttachmentID
			-- Check if child is either sponsored or the Profile Photo Year or Current Photo Year is null or 0 or the Profile Photo Year = Current Photo Year
	   and	exists (select ID 
					 from dbo.USR_CHILDEXTENSION 
					where SPONSORSHIPOPPORTUNITYCHILDID = so_reason.SPONSORSHIPOPPORTUNITYID
					  and ((coalesce (PROFILEPHOTOYEAR,0) = 0)
					         or
						   (coalesce (PHOTOYEAR,0) = 0)
						     or
						   (coalesce (PROFILEPHOTOYEAR,0) = coalesce (PHOTOYEAR,0))
					         or
						   (exists (select ID from dbo.SPONSORSHIP s where s.STATUSCODE = 1 and s.SPONSORSHIPOPPORTUNITYID = so_reason.SPONSORSHIPOPPORTUNITYID))  -- Sponsored
					      )
				   )
					  
	set @DELETEDROWS = @@ROWCOUNT
	
	
	-- Insert 'Change current photo attachment' pending reasons if child is unsponsored and the Profile Photo Year is not null or 0 and is not equal to the Current Photo Year
	insert dbo.SPONSORSHIPOPPORTUNITYREASON
				(SPONSORSHIPOPPORTUNITYID,
				 SPONSORSHIPREASONID,				
				 ADDEDBYID, 
				 CHANGEDBYID, 
				 DATEADDED, 
				 DATECHANGED)
				 
		select  ID,
				@ChangeCurrentPhotoAttachmentID, 
				@CHANGEAGENTID, 
				@CHANGEAGENTID, 
				@CurrentDate, 
				@CurrentDate
				
		  from	dbo.SPONSORSHIPOPPORTUNITY so
		 
		 where	exists (select SPONSORSHIPOPPORTUNITYCHILDID from @childIDList where SPONSORSHIPOPPORTUNITYCHILDID = so.ID )	           
	      
				-- Verify that the children do not already have a 'Change current photo attachment' pending reason
   	       and	not exists (select so_reason.SPONSORSHIPOPPORTUNITYID 
							  from dbo.SPONSORSHIPOPPORTUNITYREASON so_reason 
		                     where so_reason.SPONSORSHIPREASONID = @ChangeCurrentPhotoAttachmentID and so_reason.SPONSORSHIPOPPORTUNITYID = so.ID)

				-- Check if the child is unsponsored and the Profile Photo Year and Current Photo Year are not null or 0 and Profile Photo Year is not equal to the Current Photo Year
		   and	exists (select	ID 
					   	  from	dbo.USR_CHILDEXTENSION 
						 where SPONSORSHIPOPPORTUNITYCHILDID = so.ID
						   and not exists (select ID from dbo.SPONSORSHIP s where s.STATUSCODE = 1 and s.SPONSORSHIPOPPORTUNITYID = so.ID)  -- Sponsored
						   and coalesce (PROFILEPHOTOYEAR,0) <> 0
						   and coalesce (PHOTOYEAR,0) <> 0
						   and coalesce (PROFILEPHOTOYEAR,0) <> coalesce (PHOTOYEAR,0)
					   )	
	
				-- Don't add to ineligible kids that are not quota waiting list
		   and (so.ELIGIBILITYCODE in (@eligibilityCode_Pending, @eligibilityCode_Eligible)
		        or (so.ELIGIBILITYCODE = @eligibilityCode_Ineligible
				    and exists (select sponsorshipReasonID from dbo.USR_UFN_CHILDQUOTA_GETWAITINGLISTREASONS() wl_reasons where so.SPONSORSHIPREASONID = wl_reasons.sponsorshipReasonID)))
						
	
	set @INSERTEDROWS = @@ROWCOUNT

end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
