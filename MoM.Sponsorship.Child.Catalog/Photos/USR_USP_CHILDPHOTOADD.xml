<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes"
	ID="326ca196-8457-4271-8d6c-54d628b223e9"
	Name="USR_USP_CHILDPHOTOADD"
	Description="Adds picture and other sponsorship data to the database."
	Author="Blackbaud Product Development"
	SPName="USR_USP_CHILDPHOTOADD"
	GrantServiceRolePermission="true" >
	
	<!-- 
	Remarks:    

	History:
	Date            Modified By     Comments
	23-Sep-2012		CMayeda			Initial Version - Modified from Blackbaud prototype
	17-Oct-2012		CMayeda			Added @attachmentTypeID_ChildPhotoHeadshotCurrent
	19-Nov-2013		Memphis			Added 2 new fields: ARCHIVEDPHOTO, PHOTOYEAR	
	-->

	<CreateProcedureSQL>
    <![CDATA[
create procedure dbo.USR_USP_CHILDPHOTOADD (
	@ID uniqueidentifier = null output,
	@VALIDATEONLY bit = 0,
	@CHANGEAGENTID uniqueidentifier = null,
	@SPONSORSHIPOPPORTUNITYLOOKUPID varchar(100) = null,      
	@ATTACHMENTTYPECODEID uniqueidentifier = null,
	@PICTURETITLE nvarchar(50) = null,
	@FILENAME nvarchar(255) = null,
	@PICTURE varbinary(max)=null,
	@ARCHIVEDPHOTO bit = 0,
	@PHOTOYEAR int = null,
	@UNUSABLEPHOTO bit = 0	
)
as begin
    set nocount on;
	  
	declare @SPONSORSHIPOPPORTUNITYID uniqueidentifier = null;
	declare @CONSTITUENTID uniqueidentifier = null;
	declare @attachmentTypeID uniqueidentifier = null;
	declare @photoType nvarchar(10) = null;
	declare @currentPhotoTypeID	uniqueidentifier = null;
	
    if @ID is null
        set @ID = newid();

    if @CHANGEAGENTID is null  
        exec dbo.USP_CHANGEAGENT_GETORCREATECHANGEAGENT @CHANGEAGENTID output;

    declare @CURRENTDATE datetime;
    set @CURRENTDATE = getdate();

    begin try
        declare @ERRORMSG nvarchar(100);

		/*
		-- ***** TESTING ONLY *******
		-- need to see if the Archive & Unusable bits are coming with a 1 at all...
		if @UNUSABLEPHOTO = 1
			begin
				set @ERRORMSG = 'The Unusable Photo bit is 1!';
			end
		if @ARCHIVEDPHOTO = 1
			begin
				set @ERRORMSG = @ERRORMSG + 'and The Unusable Photo bit is 1!';
			end

		RAISERROR (@ERRORMSG, 13, 1);
		*/

        if @VALIDATEONLY = 1
			begin          
				if @SPONSORSHIPOPPORTUNITYLOOKUPID is null
				begin
					set @ERRORMSG = 'The constituent is not selected'
					RAISERROR (@ERRORMSG, 13, 1)
				end
				if @ATTACHMENTTYPECODEID is null
				begin
					set @ERRORMSG = 'The attachment type is not selected'
					RAISERROR (@ERRORMSG, 13, 1)
				end
				if @FILENAME is null
				begin
					set @ERRORMSG = 'The file name is not selected'
					RAISERROR (@ERRORMSG, 13, 1)
				end
				if @PICTURETITLE is null
				begin
					set @ERRORMSG = 'The picture title is not selected'
					RAISERROR (@ERRORMSG, 13, 1)
				end
			end		
		else
			begin
				if @SPONSORSHIPOPPORTUNITYLOOKUPID is null
				begin
					set @ERRORMSG = 'Sponsorship opportunity lookup id is not selected'
					RAISERROR (@ERRORMSG, 13, 1)
				end
			
				select @SPONSORSHIPOPPORTUNITYID = ID 
				from dbo.SPONSORSHIPOPPORTUNITY 
				where LOOKUPID = @SPONSORSHIPOPPORTUNITYLOOKUPID;
			
				if @SPONSORSHIPOPPORTUNITYID is null
				begin
					set @ERRORMSG = 'Could not find child with Lookup ID - ' + @SPONSORSHIPOPPORTUNITYLOOKUPID
					RAISERROR (@ERRORMSG, 13, 1)
				end

				-- get the photo attachment type ID values needed:
				declare @attachmentTypeID_ChildPhotoHeadshotCurrent uniqueidentifier = null
			
				select @attachmentTypeID_ChildPhotoHeadshotCurrent = ID 
				from dbo.SPROPPATTACHMENTTYPECODE 
				where lower (DESCRIPTION) = lower ('Child Photo - Headshot - Current');
			
				if @attachmentTypeID_ChildPhotoHeadshotCurrent is null
					RAISERROR 100000 'Could not find "Child Photo - Headshot - Current" photo type code'

				declare @attachmentTypeID_ChildPhotoFullBodyCurrent uniqueidentifier = null
			
				select @attachmentTypeID_ChildPhotoFullBodyCurrent = ID 
				from dbo.SPROPPATTACHMENTTYPECODE 
				where lower (DESCRIPTION) = lower ('Child Photo - Full Body - Current');
			
				if @attachmentTypeID_ChildPhotoFullBodyCurrent is null
					RAISERROR 100000 'Could not find "Child Photo - Full Body - Current" photo type code'

				-- get the photo type of this photo in the batch, and use it for later processes:
				declare @photoAttachmentType nvarchar(100) = null;
			
				select @photoAttachmentType = [DESCRIPTION] 
				from dbo.SPROPPATTACHMENTTYPECODE 
				where ID = @ATTACHMENTTYPECODEID;

				if @photoAttachmentType is null
					RAISERROR 100000 'Unable to determine the Photo Type of this Photo in the Batch!';

				-- need to validate the @ATTACHMENTTYPECODEID value based on the @ARCHIVEDPHOTO parameter: 
				--   if these are archive photos, then don't use the "Current" Photo type!
				--   so make sure the @ATTACHMENTTYPECODEID value points to a photo type that does NOT contain the word "Current"								
				if @ARCHIVEDPHOTO = 1
					begin
						-- validate the photo type of this photo in the batch
						if @photoAttachmentType like '%Current%'
							RAISERROR 100000 'Cannot have an Archive batch with a photo type of "Current". The wrong photo type is selected.';
					end
				else
					begin
						--first, find out what type of photo this is in the batch:  Headshot or Full Body:
						-- use the @photoAttachmentType variable to determine, then set the @photoType variable for further processing:
						if lower(@photoAttachmentType) like '%headshot%'
							set @photoType = 'headshot';
						else
							set @photoType = 'body';

						declare @currentPhotoTypeSearchString nvarchar(25) = null;						
						if @photoType = 'headshot'
							begin
								set @currentPhotoTypeSearchString = '%Headshot%Current%';
								set @currentPhotoTypeID = @attachmentTypeID_ChildPhotoHeadshotCurrent;
							end
						else
							begin
								set @currentPhotoTypeSearchString = '%Body%Current%';
								set @currentPhotoTypeID = @attachmentTypeID_ChildPhotoFullBodyCurrent;
							end

						-- see if there are any existing records of the same photo type with the word "Current" in the attachment type, and set it to not be current:
						if exists (select 1 from dbo.SPONSORSHIPOPPORTUNITYATTACHMENT where SPROPPATTACHMENTTYPECODEID in (select ID from dbo.SPROPPATTACHMENTTYPECODE where [DESCRIPTION] like @currentPhotoTypeSearchString)
							and SPONSORSHIPOPPORTUNITYID = @SPONSORSHIPOPPORTUNITYID)
							begin								
								-- update the current photos to not current, which means to set the attachmenttypecodeid to the NON-current value:
								declare @headshotNotCurrentAttachmentTypeCodeID uniqueidentifier = null;
								declare @fullBodyNotCurrentAttachmentTypeCodeID uniqueidentifier = null;

								select @headshotNotCurrentAttachmentTypeCodeID = ID
								from dbo.SPROPPATTACHMENTTYPECODE
								where lower ([DESCRIPTION]) = lower ('Child Photo - Headshot');
								
								if @headshotNotCurrentAttachmentTypeCodeID is null
									RAISERROR 100000 'Could not find "Child Photo - Headshot" photo type code';

								select @fullBodyNotCurrentAttachmentTypeCodeID = ID
								from dbo.SPROPPATTACHMENTTYPECODE
								where lower ([DESCRIPTION]) = lower ('Child Photo - Full Body');

								if @fullBodyNotCurrentAttachmentTypeCodeID is null
									RAISERROR 100000 'Could not find "Child Photo - Headshot" photo type code';
								
								-- find the current photo, if present, and replace it with NOT current photo type:
								declare @currentPhotoID uniqueidentifier = null;
								
								select @currentPhotoID = ID 
								from dbo.SPONSORSHIPOPPORTUNITYATTACHMENT
								where SPONSORSHIPOPPORTUNITYID = @SPONSORSHIPOPPORTUNITYID
								and SPROPPATTACHMENTTYPECODEID = @currentPhotoTypeID;
								
								if @currentPhotoID is null
									RAISERROR 100000 'Could not find the Current photo for this child...';
									
								-- update this photo record for the child:
								update dbo.SPONSORSHIPOPPORTUNITYATTACHMENT
								set SPROPPATTACHMENTTYPECODEID = (case when @photoType = 'headshot' then @headshotNotCurrentAttachmentTypeCodeID else @fullBodyNotCurrentAttachmentTypeCodeID end)
								where ID = @currentPhotoID;
								
							end  
					end
				

				-- insert this photo for this child:
				insert dbo.SPONSORSHIPOPPORTUNITYATTACHMENT (
					[ID],
					[DATEENTERED],
					[TITLE],
					[AUTHORID],
					[SPROPPATTACHMENTTYPECODEID],
					[FILENAME],
					[FILE],
					[SPONSORSHIPOPPORTUNITYID],
					[ADDEDBYID],
					[CHANGEDBYID],
					[DATEADDED],
					[DATECHANGED]
				)
				values ( 
					@ID,
					@CURRENTDATE,                                            
					@PICTURETITLE,
					@CONSTITUENTID,
					@ATTACHMENTTYPECODEID,
					@FILENAME,
					@PICTURE,
					@SPONSORSHIPOPPORTUNITYID,
					@CHANGEAGENTID,
					@CHANGEAGENTID,
					@CURRENTDATE,
					@CURRENTDATE
				);
															
				if @ATTACHMENTTYPECODEID = @attachmentTypeID_ChildPhotoHeadshotCurrent  
					begin
						update	dbo.SPONSORSHIPOPPORTUNITYCHILD
						set	PICTURE = @PICTURE, 
							PICTURETHUMBNAIL = @PICTURE,
							CHANGEDBYID = @CHANGEAGENTID,
							DATECHANGED = @CURRENTDATE
						where ID = @SPONSORSHIPOPPORTUNITYID;
				
						select @CONSTITUENTID = CONSTITUENTID 
						from dbo.SPONSORSHIPOPPORTUNITYCHILD 
						where ID = @SPONSORSHIPOPPORTUNITYID;
				
						if @CONSTITUENTID is null
							begin
								set @ERRORMSG = 'Could not find child''s constituent record'
								RAISERROR (@ERRORMSG, 13, 1)
							end
				
						update dbo.CONSTITUENT
						set	PICTURE = @PICTURE,
							PICTURETHUMBNAIL = @PICTURE,
							CHANGEDBYID = @CHANGEAGENTID,
							DATECHANGED = @CURRENTDATE
						where ID = @CONSTITUENTID;					
					end
				
				--update the new fields in USR_CHILDEXTENSION table: PHOTOYEAR, PROFILEPHOTOYEAR, PHOTOUSABLE
				--**NOTE**: only update the PhotoYear column if this is NOT an archive import!!  ********
				update dbo.USR_CHILDEXTENSION
				set PHOTOYEAR = (case when @ARCHIVEDPHOTO = 0 then @PHOTOYEAR else PHOTOYEAR end),
					--PROFILEPHOTOYEAR = @PROFILEPHOTOYEAR, 
					PHOTOUNUSABLE = @UNUSABLEPHOTO
				where SPONSORSHIPOPPORTUNITYCHILDID = @SPONSORSHIPOPPORTUNITYID;
				
			end
    end try
	
    begin catch
        exec.dbo.USP_RAISE_ERROR;
        return 1;
    end catch
    return 0;
end;
		]]>
  </CreateProcedureSQL>

</SQLStoredProcedureSpec>
