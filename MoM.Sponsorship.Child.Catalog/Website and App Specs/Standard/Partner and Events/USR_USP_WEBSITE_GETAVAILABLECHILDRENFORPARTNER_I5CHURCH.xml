<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="C45F98AD-1EB4-43F1-A533-8357B3DCCFD5"
	Name="USR_USP_WEBSITE_GETAVAILABLECHILDRENFORPARTNER_I5CHURCH"
	Description="Returns children reserved for the i5 church partner website"
	Author="Cary Mayeda"
	SPName="USR_USP_WEBSITE_GETAVAILABLECHILDRENFORPARTNER_I5CHURCH"
	>

	<!-- 
	Remarks:	Called by USR_USP_DATALIST_WEBSITE_GETAVAILABLECHILDRENFORPARTNER (Website Church Partner Child Search Data List)
 
	History:
	Date            Modified By     Comments
	29-Jun-2015		CMayeda			Initial Version
	-->

	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_WEBSITE_GETAVAILABLECHILDRENFORPARTNER_I5CHURCH (
	@GENDER nvarchar(25),
    @AGEMIN nvarchar(10),
	@AGEMAX nvarchar(10),
	@COUNTRY nvarchar(25)
)
as
begin
	set @GENDER = nullif(@GENDER, '');
	-- ** NEED TO CONVERT TO INTEGER	
    set @AGEMIN = nullif(@AGEMIN, '');	
    set @AGEMAX = nullif(@AGEMAX, '');
    set @COUNTRY = nullif(@COUNTRY, '');

	;with ChildList as
	(
	select top 500 
		so.ID,
		so_child.FIRSTNAME,
		so_child.LASTNAME,
		so_child.FIRSTNAME + ' ' + so_child.LASTNAME AS FULLNAME,
		countryconst.KEYNAME as COUNTRYNAME,
		countryconst.ID as COUNTRYID,
		so_child.AGE,
		SUBSTRING(so_child.BIRTHDATE,5,2) + '/' + SUBSTRING(so_child.BIRTHDATE,7,2) + '/' + SUBSTRING(so_child.BIRTHDATE,1,4)  as BIRTHDATE,
		CASE so_child.GENDER
			WHEN 'Female' THEN 'Girl'
			WHEN 'Male' THEN 'Boy'
		END AS GENDER,
		so_child.GENDERCODE,
		childprojectconst.KEYNAME as PROJECTNAME,
		childprojectconst.ID AS PROJECTID,
		so.LOOKUPID as CHILDNO,
		ELIGIBILITY,
		AVAILABILITY
	from	
		dbo.SPONSORSHIPOPPORTUNITY so
		inner join dbo.SPONSORSHIPLOCATION sloc on sloc.ID = so.SPONSORSHIPLOCATIONID
		inner join dbo.SPONSORSHIPOPPORTUNITYCHILD so_child on so_child.ID = so.ID
		--inner join dbo.SMARTFIELD0CEE2E20081D42CA9A9E87847970093F sf on sf.ID = so.ID   				-- Greatest Need Smart Field
		left outer join dbo.USR_CHILDPROJECTEXTENSION projectext on sloc.FIELDOFFICEID = projectext.ID
		left outer join dbo.CONSTITUENT childprojectconst on childprojectconst.ID = projectext.ID       -- This is the constituent record that has note of type "Project Bio"
		left outer join dbo.USR_COUNTRYEXTENSION countryext on projectext.COUNTRYEXTENSIONID = countryext.ID
		left outer join dbo.CONSTITUENT countryconst on countryconst.ID = countryext.ID        			-- This is the constituent record that has the note of type "Country Bio"
		 
	where 
		(RESERVATIONKEYID in (select ID from SPONSORSHIPOPPORTUNITYRESERVEPROCESS where NAME like 'Website\i5 Church%')
			or
		 RESERVATIONKEYID in (select ID from SPONSORSHIPOPPORTUNITYRESERVEPROCESS where NAME like 'Website Partner\HN-025%')

			or (RESERVATIONKEYID in (select ID from SPONSORSHIPOPPORTUNITYRESERVEPROCESS where NAME in ('Website', 'Website B', 'Website C', 'Website D', 'Website E', 'Website F', 'Website G', 'Website H', 'Website I', 'Website J'))
				and childprojectconst.LOOKUPID in ('HN-025', 'IN-251', 'KE-032', 'PH-002')
			)
	)
--        so.RESERVATIONKEYID in (select 
--									rp.ID
--                         		from 
--									dbo.SPONSORSHIPOPPORTUNITYRESERVEPROCESS rp
--                         			join dbo.USR_PARTNERCHURCHRESERVATIONS p on p.ReservationKeyID = rp.ID
--									join dbo.CONSTITUENT pc on pc.ID = p.partnerconstituentid
--                          		where 
--									pc.LOOKUPID = @PARTNERLOOKUPID )
	and ELIGIBILITY = 'Eligible'
	and AVAILABILITY = 'Reserved'
	)
			
	select * 
	from 
		ChildList
	where
		((@GENDER is null) or (GENDER = @GENDER))
	and ((@COUNTRY is null) or (upper(COUNTRYNAME) = upper(@COUNTRY)))
	and ((@AGEMIN is null) or (@AGEMAX is null) or (AGE >= @AGEMIN and AGE <= @AGEMAX))
	order by CHILDNO			
end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
